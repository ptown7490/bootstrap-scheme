#include "object.h"

char is_self_evaluating(object *exp);
char is_variable(object *expression);
char is_tagged_list(object *expression, object *tag);
char is_quoted(object *expression);
object *text_of_quotation(object *exp);
char is_assignment(object *exp);
object *assignment_variable(object *exp);
object *assignment_value(object *exp);
char is_definition(object *exp);
object *definition_variable(object *exp);
object *definition_value(object *exp);
object *make_if(object *predicate, object *consequent, object *alternative);
char is_if(object *expression);
object *if_predicate(object *exp);
object *if_consequent(object *exp);
object *if_alternative(object *exp);
object *make_lambda(object *parameters, object *body);
char is_lambda(object *exp);
object *lambda_parameters(object *exp);
object *lambda_body(object *exp);
object *make_begin(object *seq);
char is_begin(object *exp);
object *begin_actions(object *exp);
char is_last_exp(object *seq);
object *first_exp(object *seq);
object *rest_exps(object *seq);
char is_cond(object *exp);
object *cond_clauses(object *exp);
object *cond_predicate(object *clause);
object *cond_actions(object *clause);
char is_cond_else_clause(object *clause);
object *sequence_to_exp(object *seq);
object *expand_clauses(object *clauses);
object *cond_to_if(object *exp);
object *make_application(object *operator, object *operands);
char is_application(object *exp);
object *operator(object *exp);
object *operands(object *exp);
char is_no_operands(object *ops);
object *first_operand(object *ops);
object *rest_operands(object *ops);
char is_let(object *exp);
object *let_bindings(object *exp);
object *let_body(object *exp);
object *binding_parameter(object *binding);
object *binding_argument(object *binding);
object *bindings_parameters(object *bindings);
object *bindings_arguments(object *bindings);
object *let_parameters(object *exp);
object *let_arguments(object *exp);
object *let_to_application(object *exp);
char is_and(object *exp);
object *and_tests(object *exp);
char is_or(object *exp);
object *or_tests(object *exp);
object *apply_operator(object *arguments);
object *prepare_apply_operands(object *arguments);
object *apply_operands(object *arguments);
object *eval_expression(object *arguments);
object *eval_environment(object *arguments);
object *list_of_values(object *exps, object *env);
object *eval_assignment(object *exp, object *env);
object *eval_definition(object *exp, object *env);
object *eval(object *exp, object *env);
